name: CI
on: push
jobs:
  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          cache: 'gradle'
      - name: Verify tests
        run: |
          sh scripts/verify-test-files.sh
      - name: Build & Unit Test
        uses: GabrielBB/xvfb-action@v1.6
        with:
          run: ./gradlew koverReport
      - name: Export test results
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: /home/runner/work/Dartzee/Dartzee/build/reports/tests/unitTest/**/*.html
      - name: Export coverage stats
        uses: actions/upload-artifact@v3
        with:
          name: kover-report
          path: /home/runner/work/Dartzee/Dartzee/build/reports/kover/html
      - name: Export snapshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failed-snapshots
          path: /home/runner/**/*.failed.png
      - name: Update coverage
        if: github.ref == 'refs/heads/main'
        run: |
          python scripts/update-coverage.py
      - name: Commit coverage stats
        uses: EndBug/add-and-commit@v7
        if: github.ref == 'refs/heads/main'
        with:
          message: 'Update coverage stats'
  integration-and-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
          cache: 'gradle'
      - name: Integration & E2E
        uses: GabrielBB/xvfb-action@v1.0
        env:
          AWS_SYNC: ${{ secrets.AWS_SYNC }}
          AWS_LOGS: ${{ secrets.AWS_LOGS }}
        with:
          run: ./gradlew integrationAndE2E --info
      - name: Export test results
        uses: actions/upload-artifact@v3
        with:
          name: integration-and-e2e-results
          path: /home/runner/work/Dartzee/Dartzee/build/reports/tests/integrationAndE2E/**/*.html
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Build JAR
        run: ./gradlew jar --info
      - name: Export JAR
        uses: actions/upload-artifact@v3
        with:
          name: dartzee-jar
          path: /home/runner/work/Dartzee/Dartzee/build/libs/Dartzee.jar
  test-jar:
    name: Test JAR - Java ${{ matrix.java-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build]
    strategy:
      matrix:
        java-version: [8, 11]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: ${{ matrix.java-version }}
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: dartzee-jar
          path: /home/runner/work/Dartzee/Dartzee/build/libs
      - name: Test JAR
        run: |
          nohup java -jar build/libs/Dartzee.jar > dartzee-log.log 2>&1 &
          echo "Waiting for Dartzee to start..."
          attempt_counter=0
          max_attempts=10
          until $(cat dartzee-log.log | grep -Eq [databaseCurrent]); do
              if [ ${attempt_counter} -eq ${max_attempts} ];then
                echo "Max attempts reached"
                exit 1
              fi
              printf '.'
              attempt_counter=$(($attempt_counter+1))
              sleep 5
          done
          echo "Dartzee started successfully"
